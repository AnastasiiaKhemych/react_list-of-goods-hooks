{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReverse","NONE","sortType","setSortField","visibleGoods","goods","preparedGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","reverse","getSortedGoods","isShowResetButton","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,0BAAAA,E,gBAAAA,E,SAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAmCC,oBAAS,GAA5C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAiCF,mBAASH,EAASM,MAAnD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EA7BR,SACEC,EADF,GAGG,IADCH,EACF,EADEA,SAAUH,EACZ,EADYA,WAENO,EAAa,YAAOD,GAmB1B,OAjBIH,GACFI,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQP,GACN,KAAKP,EAASe,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKd,EAASiB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,QACE,OAAO,MAKXd,GACFO,EAAcQ,UAGTR,EAMcS,CAAenB,EAAiB,CACnDM,WACAH,eAEIiB,EAAoBd,GAAYH,EAMtC,OACE,sBAAKkB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,WACPf,EAAaR,EAASe,WAExBS,KAAK,SACLF,UAAWG,IAAG,iBACZlB,IAAaP,EAASe,UAAY,YANtC,iCAWA,wBACEQ,QAAS,WACPf,EAAaR,EAASiB,SAExBO,KAAK,SACLF,UAAWG,IAAG,oBACZlB,IAAaP,EAASiB,QAAU,YANpC,4BAWA,wBACEM,QAAS,WACPlB,GAAcD,IAEhBoB,KAAK,SACLF,UAAWG,IAAG,qBACXrB,GAAc,YANnB,qBAUCiB,GACC,wBACEE,QA1CM,WACdf,EAAaR,EAASM,MACtBD,GAAa,IAyCLmB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGb,EAAaiB,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCjHlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.13af3b9b.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  ALPHABET = 'alphabetically',\n  LENGTH = 'length',\n  NONE = '',\n}\n\ninterface SortParams {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nfunction getSortedGoods(\n  goods: string[],\n  { sortType, isReversed }: SortParams,\n) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return good1.localeCompare(good2);\n        case SortType.LENGTH:\n          return good1.length - good2.length;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReverse] = useState(false);\n  const [sortType, setSortField] = useState(SortType.NONE);\n  const visibleGoods = getSortedGoods(goodsFromServer, {\n    sortType,\n    isReversed,\n  });\n  const isShowResetButton = sortType || isReversed;\n  const onReset = () => {\n    setSortField(SortType.NONE);\n    setIsReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => {\n            setSortField(SortType.ALPHABET);\n          }}\n          type=\"button\"\n          className={cn('button is-info',\n            sortType !== SortType.ALPHABET && 'is-light')}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => {\n            setSortField(SortType.LENGTH);\n          }}\n          type=\"button\"\n          className={cn('button is-success',\n            sortType !== SortType.LENGTH && 'is-light')}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => {\n            setIsReverse(!isReversed);\n          }}\n          type=\"button\"\n          className={cn('button is-warning',\n            !isReversed && 'is-light')}\n        >\n          Reverse\n        </button>\n        {isShowResetButton && (\n          <button\n            onClick={onReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}